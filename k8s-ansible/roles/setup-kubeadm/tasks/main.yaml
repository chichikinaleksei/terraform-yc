---
# Detect if control-plane already initialized
- name: Check if admin.conf exists (cluster initialized)
  stat:
    path: /etc/kubernetes/admin.conf
  register: admin_conf
  when: inventory_hostname == groups['k8s_master'][0]

# Create kubeadm config (always OK to refresh)
- name: Create kubeadm config file from template
  template:
    src: kubeadm-config.yaml.j2
    dest: /tmp/kubeadm-config.yaml
  when: inventory_hostname == groups['k8s_master'][0]

# Run kubeadm init only if not already initialized
- name: Initialize the Kubernetes cluster (master)
  command: kubeadm init --config=/tmp/kubeadm-config.yaml
  when:
    - inventory_hostname == groups['k8s_master'][0]
    - not admin_conf.stat.exists
  register: kubeadm_init_output
  changed_when: admin_conf.stat.exists | ternary(false, true)

# Ensure ~/.kube exists for ubuntu
- name: Ensure kube dir exists for ubuntu
  file:
    path: /home/ubuntu/.kube
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: "0755"
  when: inventory_hostname == groups['k8s_master'][0]
  become: true

# Copy kubeconfig (works whether just-inited or already running)
- name: Install kubeconfig for ubuntu user (master only)
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/ubuntu/.kube/config
    remote_src: true
    owner: ubuntu
    group: ubuntu
    mode: "0644"
  when: inventory_hostname == groups['k8s_master'][0]
  become: true

# Get a fresh join command only if needed
- name: Extract join command (master)
  shell: kubeadm token create --print-join-command
  register: join_command
  when:
    - inventory_hostname == groups['k8s_master'][0]
  changed_when: false

- name: Save join command to file on Ansible host
  delegate_to: localhost
  become: false
  run_once: true
  copy:
    content: "{{ join_command.stdout | trim }}\n"
    dest: "{{ playbook_dir }}/join-command.sh"
    mode: "0644"
  when: inventory_hostname == groups['k8s_master'][0]

# Only join workers that arenâ€™t already joined
- name: Check if node already joined (kubelet.conf exists)
  stat:
    path: /etc/kubernetes/kubelet.conf
  register: node_joined
  when: inventory_hostname in (groups['k8s_worker'] + groups['k8s_ingress'])

- name: Copy join command to workers
  copy:
    src: "{{ playbook_dir }}/join-command.sh"
    dest: /tmp/join-command.sh
    mode: "0755"
  when:
    - inventory_hostname in (groups['k8s_worker'] + groups['k8s_ingress'])
    - not node_joined.stat.exists

- name: Join node to the Kubernetes cluster
  command: bash /tmp/join-command.sh
  when:
    - inventory_hostname in (groups['k8s_worker'] + groups['k8s_ingress'])
    - not node_joined.stat.exists
# Label the ingress node (run from master using cluster-admin kubeconfig)
# - name: Label ingress node(s)
#   command: >
#     kubectl --kubeconfig=/etc/kubernetes/admin.conf
#     label node {{ item }} node-role.kubernetes.io/ingress="" --overwrite
#   loop: "{{ groups['k8s_ingress'] | default([]) }}"
#   when: inventory_hostname == groups['k8s_master'][0]
